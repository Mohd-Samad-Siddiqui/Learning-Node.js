*Q1. What is nmp?*
**npm** is a tool that helps you manage code packages for JavaScript projects. Here's what it does:

- **Manages Packages:**  
  It lets you install, update, and remove libraries (packages) that your project needs.

- **Handles Dependencies:**  
  npm keeps track of other packages that your code relies on, ensuring everything works together.

- **Version Control:**  
  It manages different versions of packages so you can update safely without breaking your project.

- **Works Everywhere:**  
  npm is used for both server-side (Node.js) and front-end projects.

In simple terms, npm makes it easy to share and reuse code, saving your time and effort in your development projects.


*Q2. What are Dependencies?*
i. Dependencies are the external packages or modules that your project needs in order to run properly. They are listed in the dependencies section of your package.json file.

ii. For example, if your project uses Express.js, then Express is a dependency of your project.

iii. Additionally, Express.js itself may rely on other packages to function. These are called 'transitive' or 'nested dependencies'. You don't list them directly in your package.json; npm manages(download) them for you.

iv. Thereâ€™s also a separate category called devDependencies for packages that are only needed during development (like testing tools or build systems).


*Q3. What is devDependencies?*
DevDependencies are packages that you only need during the development of your project and not in production. They include tools like testing frameworks, build systems, and code linters. For example, packages like nodemon (for automatically restarting your server during development) or Mocha (for testing) are typically listed under devDependencies in your package.json file.
When you deploy your application on Vercel, DigitalOcean, Heroku, Amazon Web Servies(AWS) etc, you usually don't need these packages, so they are kept separate from the main dependencies needed for the app to run.

*Q4. How to use it?*
In terminal you can write..
-(Local Installation) This installs the package in the node_modules folder of your current project. It's added as a dependency in your package.json by default.
a. npm install <package ka naam>
b. npm i <package ka naam>

-(Global Installation)
a. npm install -g <package ka naam>

-(Development Dependency)
a. npm install --save-dev <package ka naam>
b. npm i -D <package ka naam>

*Q5. How to install the specific version of packages?*
a. npm install <package ka naam>@3.0.9 
Example: npm install accessibility@3.0.9

*Q6. How to uninstall packages?*
To uninstall packages you've to write npm uninstall fir package ka naam
a. npm uninstall <package ka naam>
NOTE: You can't write only -u to uninstall the package or else you'd get "Unknown command: -u"


*Q7. What are scripts in Node.js?*

